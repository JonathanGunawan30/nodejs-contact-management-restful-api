openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
  description: API untuk manajemen pengguna, termasuk registrasi, login, pembaruan profil, dan logout.
paths:
  /api/users:
    post:
      summary: Mendaftarkan pengguna baru
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                name:
                  type: string
      responses:
        '200':
          description: Pengguna berhasil didaftarkan
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      username:
                        type: string
                      name:
                        type: string
        '400':
          description: Pengguna sudah terdaftar
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: string
                    example: "username already registered"
  /api/users/login:
    post:
      summary: Login pengguna
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login berhasil, token diberikan
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: "unique-token"
        '400':
          description: Username atau password salah
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: string
                    example: "username or password is wrong"
  /api/users/current:
    get:
      summary: Mendapatkan data pengguna
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Data pengguna berhasil didapatkan
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      username:
                        type: string
                      name:
                        type: string
        '401':
          description: Tidak terautentikasi
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: string
                    example: "Unauthorized"
    patch:
      summary: Memperbarui data pengguna
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Jonathan Gunawan Updated"
                password:
                  type: string
                  example: "new password"
      responses:
        '200':
          description: Data pengguna berhasil diperbarui
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      username:
                        type: string
                      name:
                        type: string
        '400':
          description: Validasi error, nama terlalu panjang atau data tidak valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: string
                    example: "Name length max 100"
        '409':
          description: Username yang diminta sudah ada
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: string
                    example: "Username is already taken"
  /api/users/logout:
    delete:
      summary: Logout pengguna
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logout berhasil
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string
                    example: "OK"
        '401':
          description: Tidak terautentikasi
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: string
                    example: "Unauthorized"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
